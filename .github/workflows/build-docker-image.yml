---
  name: Build SSHD Container
  
  permissions: 
    packages: write
    repository-projects: write
    contents: write
    id-token: write
    pull-requests: write    
  
  concurrency: 
    group: ${{ github.workflow }}
    cancel-in-progress: true
  
  on:
    push:
      branches:
        - main

  env:
    AZURECR_PASSWORD: ${{ secrets.AZURECR_PASSWORD }}
    DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  
  jobs:
    build:
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout the repo
          uses: actions/checkout@v2
  
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
  
        - uses: thefringeninja/action-minver@2.0.0-preview1
          id: minver
          with:
            # Optional. Specifies which part of the version to auto-increment.
            auto-increment: patch
            # Optional. Sets custom build metadata for your semantic version.
            # build-metadata: ${{ github.sha }}
            # Optional. Specifies the default pre-release phase.
            default-pre-release-phase: preview
            # Optional. Specifies the minimum version to use when no tags exist.
            minimum-major-minor: 0.0
            # Optional. Specifies the prefix of the tags
            tag-prefix: v
            # Optional. Specifies the log level.
            verbosity: info

        - name: Images
          id: ghcr-image
          run: |
            echo "GHCR_IMAGE=ghcr.io/${{ github.repository_owner }}/sshd" >> $GITHUB_ENV
            echo "::set-output name=ghcr_image::ghcr.io/${{ github.repository_owner }}/sshd"

        - name: Images
          id: azurecr-image
          run: |
            echo "AZURECR_IMAGE=${{ vars.AZURECR_REGISTRY_NAME }}.azurecr.io/sshd" >> $GITHUB_ENV
            echo "::set-output name=images::${{ vars.AZURECR_REGISTRY_NAME }}.azurecr.io/sshd"

        - name: Images
          id: docker-image
          run: |
            echo "DOCKER_IMAGE=docker.io/${{ vars.DOCKER_HUB_USERNAME }}/sshd" >> $GITHUB_ENV
            echo "::set-output name=images::docker.io/${{ vars.DOCKER_HUB_USERNAME }}/sshd"

        - name: Images
          id: images
          run: |
            echo "IMAGES=ghcr.io/${{ github.repository_owner }}/sshd"
            if [ "${{ env.AZURECR_PASSWORD != '' }}" ]; then
              echo "IMAGES=$IMAGES\
            ${{ vars.AZURECR_REGISTRY_NAME }}.azurecr.io/sshd" >> $GITHUB_ENV
            fi
            if [ "${{ env.DOCKER_HUB_PASSWORD != '' }}" ]; then
              echo "IMAGES=$IMAGES\
            docker.io/${{ vars.DOCKER_HUB_USERNAME }}/sshd" >> $GITHUB_ENV
            fi
            echo "::set-output name=images::$IMAGES

        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: |
              ${{ env.IMAGES }}
            flavor: |
              latest=auto
            labels: |
              org.opencontainers.image.version=${{ steps.minver.outputs.version }}
              org.opencontainers.image.licenses=MIT
              org.opencontainers.image.description=A Docker image for an OpenSSH server
            tags: |
              type=raw,value=latest
              type=ref,event=pr
              type=ref,event=tag
              type=raw,value=${{ steps.minver.outputs.version }}
              type=sha,format=long,pattern={{sha}},prefix=
              type=sha,format=short,prefix=
              type=schedule
              type=schedule,pattern=nightly
              type=schedule,pattern={{date 'YYYYMMDD'}}
  
        - name: Login GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ vars._GITHUB_PACKAGES_USERNAME }}
            password: ${{ secrets._GITHUB_PACKAGES_PASSWORD }}
  
        - name: Login Azure Container Registry
          if: env.AZURECR_PASSWORD != ''
          uses: docker/login-action@v3
          with:
            registry: ${{ vars.AZURECR_REGISTRY_NAME }}.azurecr.io
            username: ${{ vars.AZURECR_USERNAME }}
            password: ${{ secrets.AZURECR_PASSWORD }}
  
        - name: Login Docker Hub Registry
          if: env.DOCKER_HUB_PASSWORD != ''
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_PASSWORD }}

        - name: Build & push the Docker image
          uses: docker/build-push-action@v6.7.0
          with:
            context: .
            pull: true
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            file: Dockerfile
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
            annotations: ${{ steps.meta.outputs.annotations }}
  