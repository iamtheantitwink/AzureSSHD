name: Build SSHD Container

permissions:
  packages: write
  repository-projects: write
  contents: write
  id-token: write
  pull-requests: write    

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main

env:
  AZURECR_PASSWORD: ${{ secrets.AZURECR_PASSWORD }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  GITHUB_PACKAGES_USERNAME: ${{ vars._GITHUB_PACKAGES_USERNAME }}
  GITHUB_PACKAGES_PASSWORD: ${{ secrets._GITHUB_PACKAGES_PASSWORD }}
  AZURECR_REGISTRY_NAME: ${{ vars.AZURECR_REGISTRY_NAME }}
  AZURECR_USERNAME: ${{ vars.AZURECR_USERNAME }}
  DOCKER_HUB_USERNAME: ${{ vars.DOCKER_HUB_USERNAME }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: thefringeninja/action-minver@2.0.0-preview1
        id: minver
        with:
          auto-increment: patch
          default-pre-release-phase: preview
          minimum-major-minor: 0.0
          tag-prefix: v
          verbosity: info

      - name: Set and output tags variable
        id: set-tags
        run: |
          tags_json="[]"
          if [ "${GITHUB_PACKAGES_PASSWORD}" != "" ]; then
            tags_json=$(echo $tags_json | jq '. + ["ghcr.io/${{ env.GITHUB_PACKAGES_USERNAME }}/sshd"]')
          fi
          if [ "${AZURECR_PASSWORD}" != "" ]; then
            tags_json=$(echo $tags_json | jq '. + ["${{ env.AZURECR_REGISTRY_NAME }}.azurecr.io/sshd"]')
          fi
          if [ "${DOCKER_HUB_PASSWORD}" != "" ]; then
            tags_json=$(echo $tags_json | jq '. + ["docker.io/${{ env.DOCKER_HUB_USERNAME }}/sshd"]')
          fi
          # Escape JSON for GitHub Actions environment file format
          echo "TAGS_JSON=$tags_json" >> $GITHUB_ENV
          echo "::set-output name=tags_json::$tags_json"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.set-tags.outputs.tags_json }}
          flavor: |
            latest=auto
          labels: |
            org.opencontainers.image.version=${{ steps.minver.outputs.version }}
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.description=A Docker image for an OpenSSH server
          tags: |
            type=raw,value=latest
            type=ref,event=pr
            type=ref,event=tag
            type=raw,value=${{ steps.minver.outputs.version }}
            type=sha,format=long,pattern={{sha}},prefix=
            type=sha,format=short,prefix=
            type=schedule
            type=schedule,pattern=nightly
            type=schedule,pattern={{date 'YYYYMMDD'}}

      - name: Login GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GITHUB_PACKAGES_USERNAME }}
          password: ${{ secrets.GITHUB_PACKAGES_PASSWORD }}

      - name: Login Azure Container Registry
        if: ${{ env.AZURECR_PASSWORD != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURECR_REGISTRY_NAME }}.azurecr.io
          username: ${{ env.AZURECR_USERNAME }}
          password: ${{ env.AZURECR_PASSWORD }}

      - name: Login Docker Hub Registry
        if: ${{ env.DOCKER_HUB_PASSWORD != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}

      - name: Build & push the Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          annotations: ${{ steps.meta.outputs.annotations }}
